import itertools
from typing import *


# time limit
class Solution1:
    def countQuadruplets(self, nums: List[int]) -> int:
        # i, j, k. l
        # l> j> k> i
        count = 0
        each_list = itertools.combinations(nums, 4)
        for num in each_list:
            if num[3] > num[1]:
                if num[1] > num[2]:
                    if num[2] > num[0]:
                        count += 1
        return count


# time limit
class Solution2:
    def countQuadruplets(self, nums: List[int]) -> int:
        N = len(nums)
        count = 0
        jk_list = []

        for j in range(1, N - 2):
            for k in range(j + 1, N - 1):
                if nums[j] > nums[k]:
                    jk_list.append([j, k, nums[j], nums[k]])

        for jk in jk_list:
            for l in range(jk[1] + 1, N):
                for i in range(jk[0]):
                    if nums[l] > jk[2] and nums[i] < jk[3]:
                        count += 1
        """
        같은 코드, 5번 타임오버
        for j in range(1, N - 2):
            for k in range(j + 1, N - 1):
                if nums[j] > nums[k]:
                    for l in range(k+1, N):
                        if nums[l] > nums[j]:
                            for i in range(j):
                                if nums[i] < nums[k]:
                                    count += 1
        """
        return count


"""
[1,3,2,4,5]
[1,3,5,2,4]
[3,9,5,4,8,2,1,10,7,6]
[178,152,109,281,196,227,272,66,224,233,51,248,39,118,111,230,250,255,114,125,221,299,205,186,181,5,61,115,228,169,101,287,269,80,57,107,143,75,198,54,53,172,40,29,96,256,83,258,74,236,241,138,261,192,128,244,234,298,214,184,168,7,164,103,3,46,249,204,288,175,85,116,130,151,275,273,217,166,124,296,136,48,158,153,291,277,268,211,30,167,20,243,276,95,202,49,246,87,9,231,50,6,56,266,24,72,11,286,189,180,37,156,94,35,280,52,117,257,159,297,160,68,112,283,64,104,220,18,38,133,1,179,193,222,219,67,289,194,16,145,173,79,163,47,290,176,191,92,42,239,139,119,253,26,123,141,264,134,23,285,32,174,206,215,146,203,254,140,28,13,161,148,267,63,88,70,182,260,2,232,19,90,33,149,27,25,144,73,293,131,135,108,201,122,185,237,235,165,69,147,59,21,245,89,45,209,102,284,120,106,110,36,78,274,97,197,41,105,91,251,98,177,34,60,82,240,216,208,84,225,187,282,207,76,55,199,71,127,292,271,129,212,100,226,195,247,223,263,10,188,142,62,113,183,242,43,137,81,229,170,8,17,14,171,238,150,15,44,121,213,190,270,154,4,93,157,65,279,262,259,278,200,265,252,77,132,12,58,162,210,22,126,99,294,295,218,31,86,155]
[233,52,33,267,124,21,459,497,394,10,196,114,3,119,139,132,90,159,99,38,340,477,134,268,113,179,162,418,24,115,387,136,460,378,336,84,335,161,261,412,39,89,137,104,20,125,383,131,171,382,401,293,156,495,207,361,141,396,68,486,464,409,260,244,211,481,160,430,228,251,30,149,313,248,472,14,346,163,281,201,96,205,83,463,143,218,365,250,178,193,110,303,235,70,334,202,330,404,109,247,282,276,278,199,148,167,329,86,390,174,456,266,150,494,304,80,470,127,425,371,454,216,474,8,298,485,79,166,480,444,254,420,450,448,226,367,53,419,203,45,388,187,57,362,238,397,316,320,63,429,414,410,75,23,65,225,11,41,112,482,1,384,358,72,351,440,116,422,246,133,399,307,256,93,213,352,487,200,255,82,51,475,9,144,356,169,421,462,173,373,262,48,453,210,155,87,105,372,182,438,476,428,49,177,449,190,377,186,170,275,223,314,435,197,403,152,434,35,249,158,473,180,220,195,350,326,92,297,42,215,258,467,212,413,493,381,12,363,56,423,498,273,279,319,194,426,333,157,284,291,240,392,19,288,332,417,44,308,18,172,28,25,198,50,496,111,62,492,26,191,69,380,355,360,341,95,309,455,471,181,301,206,389,257,58,6,130,295,271,29,317,37,184,22,219,242,488,106,385,120,118,348,74,40,300,446,175,405,140,5,402,47,145,461,36,443,321,272,103,165,386,31,310,126,366,17,436,343,231,234,54,183,469,415,439,46,376,357,277,2,274,398,466,369,400,100,442,437,227,108,499,296,243,128,214,239,81,292,208,61,432,289,4,458,337,290,91,230,232,43,221,370,391,331,407,78,97,15,147,483,236,204,121,489,344,164,237,364,151,342,431,264,85,359,368,252,253,347,283,60,411,315,135,154,353,209,259,76,479,73,299,27,395,138,393,222,16,153,129,328,98,217,263,287,32,94,424,122,427,224,64,322,176,374,491,468,55,379,34,88,484,59,123,71,107,168,447,433,101,452,189,265,451,324,270,229,7,490,478,339,286,318,302,192,77,445,67,185,102,325,188,305,269,465,306,117,338,311,375,441,312,408,280,345,416,146,349,285,13,142,241,245,66,457,323,327,294,406,354]
"""